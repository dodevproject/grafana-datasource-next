name: Build and Package Grafana Plugin (ARM)

on:
  workflow_dispatch: # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest # 这里使用 ubuntu-latest，虽然是 x86_64 架构，但可以在里面配置 ARM 环境
    container:
      image: ubuntu:latest # 使用 Ubuntu 容器来模拟 ARM 环境

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2 # 用于模拟 ARM 架构

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Install dependencies for ARM
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            build-essential \
            ca-certificates \
            git \
            wget \
            curl \
            gnupg \
            lsb-release \
            nodejs \
            npm

      - name: Set up Go for ARM
        uses: actions/setup-go@v3
        with:
          go-version: '1.18' # 或者你需要的 Go 版本

      - name: Install Mage
        run: |
          go install github.com/magefile/mage@latest

      - name: Build Backend (Mage)
        working-directory: ./backend # 假设你的后端代码在 backend 目录
        run: |
          GOOS=linux GOARCH=arm64 mage # 指定 ARM64 架构编译

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # 或者你需要的 Node.js 版本

      - name: Install Frontend Dependencies
        working-directory: ./src # 假设你的前端代码在 src 目录
        run: npm install

      - name: Build Frontend (npm)
        working-directory: ./src
        run: npm run build

      - name: Create Distribution Directory
        run: mkdir dist

      - name: Copy Backend Artifacts
        run: |
          mkdir -p dist/backend
          cp backend/build/* dist/backend/ # 假设 mage 构建的输出在 backend/build 目录

      - name: Copy Frontend Artifacts
        run: |
          mkdir -p dist/frontend
          cp -r src/dist/* dist/frontend/ # 假设 npm run build 的输出在 src/dist 目录

      - name: Package Distribution
        run: |
          tar -czvf plugin.tar.gz dist

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: plugin-dist
          path: plugin.tar.gz
